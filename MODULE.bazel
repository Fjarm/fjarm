module(
    name = "fjarm",
    version = "20240521.0.0",
)

bazel_dep(name = "rules_go", version = "0.48.1")
bazel_dep(name = "gazelle", version = "0.37.0")
bazel_dep(name = "rules_oci", version = "2.0.0-beta1")
bazel_dep(name = "rules_pkg", version = "0.10.1")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.4")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//api:go.mod")
use_repo(
    go_deps,
    "build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go",
    "build_buf_gen_go_fjarm_fjarm_grpc_go",
    "build_buf_gen_go_fjarm_fjarm_protocolbuffers_go",
    "com_github_bufbuild_protovalidate_go",
    "com_github_google_uuid",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
)

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "alpine_base",
    # SEE: https://hub.docker.com/layers/library/alpine/3.20/images/sha256-dabf91b69c191a1a0a1628fd6bdd029c0c4018041c7f052870bb13c5a222ae76
    digest = "sha256:b89d9c93e9ed3597455c90a0b88a8bbb5cb7188438f70953fede212a0c4394e0",
    image = "docker.io/library/alpine",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "alpine_base", "alpine_base_linux_amd64", "alpine_base_linux_arm64")

register_toolchains("//tools/toolchains:all")
