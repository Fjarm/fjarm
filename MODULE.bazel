module(
    name = "fjarm",
    version = "20240521.0.0",
)

bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_buf", version = "0.3.0")
bazel_dep(name = "toolchains_protoc", version = "0.3.1")
bazel_dep(name = "rules_go", version = "0.48.1")
bazel_dep(name = "gazelle", version = "0.37.0")
bazel_dep(name = "rules_oci", version = "2.0.0-beta1")
bazel_dep(name = "rules_pkg", version = "0.10.1")

# TODO(20204-06-04): Remove once rules_buf removes dependencies on @com_google_protobuf//:protoc
#local_path_override(
#    module_name = "rules_buf",
#    path = "../rules_buf",
#)

# TODO(20204-06-04): Remove once rules_buf removes dependencies on @com_google_protobuf//:protoc
# Optional: choose a version of protoc rather than the latest.
protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    # Creates a repository to satisfy well-known-types dependencies such as
    # deps=["@com_google_protobuf//:any_proto"]
    google_protobuf = "com_google_protobuf",
    # Pin to any version of protoc
    # NOTE: Keep this version up to date with the pinned version in ./proto/buf.gen.yaml
    version = "v27.0",
)
use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")

# Override the default version of buf
# SEE: Required because it provides the Buf plugin to the `protoc` compiler
# NOTE: Keep this version up to date with the pinned version in ./.github/workflows/buf-*.yaml
buf.toolchains(version = "v1.34.0")

# SEE: https://buf.build/docs/build-systems/bazel#buf-dependencies
# NOTE: Keep this version up to date with the pinned version in ./proto/buf.yaml
buf.dependency(module = "buf.build/bufbuild/protovalidate:46a4cf4ba1094a34bcd89a6c67163b4b")
use_repo(buf, "buf_deps")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.4")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//api:go.mod")
use_repo(
    go_deps,
    "build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go",
    "com_github_bufbuild_protovalidate_go",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
)

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "alpine_base",
    # SEE: https://hub.docker.com/layers/library/alpine/3.20/images/sha256-dabf91b69c191a1a0a1628fd6bdd029c0c4018041c7f052870bb13c5a222ae76
    digest = "sha256:b89d9c93e9ed3597455c90a0b88a8bbb5cb7188438f70953fede212a0c4394e0",
    image = "docker.io/library/alpine",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "alpine_base", "alpine_base_linux_amd64", "alpine_base_linux_arm64")

register_toolchains("//tools/toolchains:all")
